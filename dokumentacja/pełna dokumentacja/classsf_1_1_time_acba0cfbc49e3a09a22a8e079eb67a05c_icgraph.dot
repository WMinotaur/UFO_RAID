digraph "sf::Time::Time"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="sf::Time::Time",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Default constructor."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="sf::Time::microseconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a951fd7219641f1e8191887f5dfe0dc31",tooltip="Construct a time value from a number of microseconds."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="sf::Time::milliseconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ae379d420bc07170668f51522023957b9",tooltip="Construct a time value from a number of milliseconds."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="sf::Time::operator!=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ae06b561f6422ec8ca414d400efd2cf4b",tooltip="Overload of != operator to compare two time values."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="sf::Time::operator%",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#aafb8b12fb0ac0e366d6ea9c9e9f93335",tooltip="Overload of binary % operator to compute remainder of a time value."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="sf::Time::operator%=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#af12dd271f14a17b58c9d737395e776d4",tooltip="Overload of binary %= operator to compute/assign remainder of a time value."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="sf::Time::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a63723c9e9c5ff6151377ec4350c6f36e",tooltip="Overload of binary * operator to scale a time value."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="sf::Time::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a40a6d0938fb4a43731d54fd90bfc6476",tooltip="Overload of binary * operator to scale a time value."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="sf::Time::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ac1386c6360872d354b9b59eadcd9778d",tooltip="Overload of binary * operator to scale a time value."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="sf::Time::operator*",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#acd021b3ebb108053d7dec56869e27385",tooltip="Overload of binary * operator to scale a time value."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="sf::Time::operator*=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a8996b6a6fcb8f3854b486b8e43949b50",tooltip="Overload of binary *= operator to scale/assign a time value."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="sf::Time::operator*=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a6656a0a1a1802009a72d93fbba61f24a",tooltip="Overload of binary *= operator to scale/assign a time value."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="sf::Time::operator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a7155e965f238f8c32d63649b0189ef47",tooltip="Overload of binary + operator to add two time values."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="sf::Time::operator+=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a831c8df4b7b9b47eaa0c5a52a1be654c",tooltip="Overload of binary += operator to add/assign two time values."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="sf::Time::operator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ace92ab9bc7aec80239af7218cd89cc80",tooltip="Overload of binary - operator to subtract two time values."];
  Node1 -> Node16 [id="edge15_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="sf::Time::operator-",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a1b23b91cf367764338c2ff922c65da4e",tooltip="Overload of unary - operator to negate a time value."];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="sf::Time::operator-=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#aaf7888302cf4847f97cfc26875367b94",tooltip="Overload of binary -= operator to subtract/assign two time values."];
  Node1 -> Node18 [id="edge17_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="sf::Time::operator/",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a3386c392dbc62e51dfa59730854d1ed2",tooltip="Overload of binary / operator to scale a time value."];
  Node1 -> Node19 [id="edge18_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="sf::Time::operator/",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ab72f2de3e2bb592b4b4008dc1ac79056",tooltip="Overload of binary / operator to scale a time value."];
  Node1 -> Node20 [id="edge19_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="sf::Time::operator/",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ac3ae4f4d24a93e088d8e36d68322ea0f",tooltip="Overload of binary / operator to compute the ratio of two time values."];
  Node1 -> Node21 [id="edge20_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="sf::Time::operator/=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a9835490c54cab06492ec3aa9e9275ef9",tooltip="Overload of binary /= operator to scale/assign a time value."];
  Node1 -> Node22 [id="edge21_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="sf::Time::operator/=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ad51871e3db77def834ae8688e64504ff",tooltip="Overload of binary /= operator to scale/assign a time value."];
  Node1 -> Node23 [id="edge22_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="sf::Time::operator\<",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ac222933174ddcff5d14c3ac7d1020d54",tooltip="Overload of < operator to compare two time values."];
  Node1 -> Node24 [id="edge23_Node000001_Node000024",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="sf::Time::operator\<=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a2c22369869bf903578635bc6517c44d4",tooltip="Overload of <= operator to compare two time values."];
  Node1 -> Node25 [id="edge24_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="sf::Time::operator==",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a2b8453227f651e9d5db3663fa08c47e2",tooltip="Overload of == operator to compare two time values."];
  Node1 -> Node26 [id="edge25_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="sf::Time::operator\>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#a23978402846bf3c7ac54a3f2c6b397a2",tooltip="Overload of > operator to compare two time values."];
  Node1 -> Node27 [id="edge26_Node000001_Node000027",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="sf::Time::operator\>=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ad69edc80cd01b7a03f5673b4276181eb",tooltip="Overload of >= operator to compare two time values."];
  Node1 -> Node28 [id="edge27_Node000001_Node000028",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="sf::Time::seconds",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_time.html#ae36b9ef700f0ed0516abf0194ceb546b",tooltip="Construct a time value from a number of seconds."];
}
