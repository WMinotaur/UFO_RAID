digraph "sf::String::String"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="sf::String::String",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Default constructor."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="sf::String::end",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#af1ab4c82ff2bdfb6903b4b1bb78a8e5c",tooltip="Return an iterator to the end of the string."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="sf::String::find",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#aa189ec8656854106ab8d2e935fd9cbcc",tooltip="Find a sequence of one or more characters in the string."];
  Node1 -> Node4 [id="edge3_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="sf::String::insert",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#ad0b1455deabf07af13ee79812e05fa02",tooltip="Insert one or more characters into the string."];
  Node1 -> Node5 [id="edge4_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="sf::String::operator!=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#a2b592c36be218b4811795fdc84eecc69",tooltip="Overload of != operator to compare two UTF-32 strings."];
  Node1 -> Node6 [id="edge5_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="sf::String::operator+",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#a55ef2bf7dc6b295ef7127b0bc1e58760",tooltip="Overload of binary + operator to concatenate two strings."];
  Node1 -> Node7 [id="edge6_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="sf::String::operator+=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#afdae61e813b2951a6e39015e34a143f7",tooltip="Overload of += operator to append an UTF-32 string."];
  Node1 -> Node8 [id="edge7_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="sf::String::operator\<",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#ac2ca5a7703402a2bbafd85eec6d1e846",tooltip="Overload of < operator to compare two UTF-32 strings."];
  Node1 -> Node9 [id="edge8_Node000001_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="sf::String::operator\<=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#abd342b6094b81cd086c7929b53b112ae",tooltip="Overload of <= operator to compare two UTF-32 strings."];
  Node1 -> Node10 [id="edge9_Node000001_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="sf::String::operator=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#af14c8e1bf351cf18486f0258c36260d7",tooltip="Overload of assignment operator."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="sf::String::operator==",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#a2a385459fa9a237e61a712fa956d489e",tooltip="Overload of == operator to compare two UTF-32 strings."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="sf::String::operator\>",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#a5efc1eca58cf5c17d01eb8501d303538",tooltip="Overload of > operator to compare two UTF-32 strings."];
  Node1 -> Node13 [id="edge12_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="sf::String::operator\>=",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#a8d2979d7829d6616330a768956f251e1",tooltip="Overload of >= operator to compare two UTF-32 strings."];
  Node1 -> Node14 [id="edge13_Node000001_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="sf::String::replace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#a82bbfee2bf23c641e5361ad505c07921",tooltip="Replace all occurrences of a substring with a replacement string."];
  Node1 -> Node15 [id="edge14_Node000001_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="sf::String::replace",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#ad460e628c287b0fa88deba2eb0b6744b",tooltip="Replace a substring with another string."];
  Node1 -> Node16 [id="edge15_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="sf::String::String",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#af862594d3c4070d8ddbf08cf8dce4f59",tooltip="Copy constructor."];
  Node1 -> Node17 [id="edge16_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="sf::String::substring",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classsf_1_1_string.html#a492645e00032455e6d92ff0e992654ce",tooltip="Return a part of the string."];
}
