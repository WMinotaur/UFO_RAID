digraph "sf::RenderStates"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="sf::RenderStates",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Define the states used for drawing to a RenderTarget."];
  Node1 -> Node1 [id="edge1_Node000001_Node000001",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" Default",fontcolor="grey" ];
  Node2 -> Node1 [id="edge2_Node000001_Node000002",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" blendMode",fontcolor="grey" ];
  Node2 [id="Node000002",label="sf::BlendMode",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsf_1_1_blend_mode.html",tooltip="Blending modes for drawing."];
  Node3 -> Node1 [id="edge3_Node000001_Node000003",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" transform",fontcolor="grey" ];
  Node3 [id="Node000003",label="sf::Transform",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsf_1_1_transform.html",tooltip="Define a 3x3 transform matrix."];
  Node3 -> Node3 [id="edge4_Node000003_Node000003",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" Identity",fontcolor="grey" ];
  Node4 -> Node1 [id="edge5_Node000001_Node000004",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" texture",fontcolor="grey" ];
  Node4 [id="Node000004",label="sf::Texture",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsf_1_1_texture.html",tooltip="Image living on the graphics card that can be used for drawing."];
  Node5 -> Node4 [id="edge6_Node000004_Node000005",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="sf::GlResource",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsf_1_1_gl_resource.html",tooltip="Base class for classes that require an OpenGL context."];
  Node6 -> Node1 [id="edge7_Node000001_Node000006",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" shader",fontcolor="grey" ];
  Node6 [id="Node000006",label="sf::Shader",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsf_1_1_shader.html",tooltip="Shader class (vertex, geometry and fragment)"];
  Node5 -> Node6 [id="edge8_Node000006_Node000005",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node7 -> Node6 [id="edge9_Node000006_Node000007",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="sf::NonCopyable",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsf_1_1_non_copyable.html",tooltip="Utility class that makes any derived class non-copyable."];
  Node8 -> Node6 [id="edge10_Node000006_Node000008",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" CurrentTexture",fontcolor="grey" ];
  Node8 [id="Node000008",label="sf::Shader::CurrentTextureType",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsf_1_1_shader_1_1_current_texture_type.html",tooltip="Special type that can be passed to setUniform(), and that represents the texture of the object being ..."];
}
